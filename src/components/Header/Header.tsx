import React, { useState, useEffect } from "react";
import styles from "./Header.module.scss";
import MobileMenu from "../MobileMenu/MobileMenu";
import { useLanguage } from "../../useLanguage";

const Header: React.FC = () => {
  // === üß≠ –°–¢–ê–ù–ò –ö–û–ú–ü–û–ù–ï–ù–¢–ê ===
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [theme, setTheme] = useState<"light" | "dark">("dark");

  // === üåê –•–£–ö –ú–û–í–ò ===
  const { lang, setLang, t } = useLanguage();

  // === üçî –§–£–ù–ö–¶–Ü–á –î–õ–Ø –ú–ï–ù–Æ ===
  const toggleMenu = () => setIsMenuOpen((prev) => !prev);
  const closeMenu = () => setIsMenuOpen(false);

  // === üö´ –ó–∞–±–æ—Ä–æ–Ω—è—î–º–æ –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç–æ–º—É –º–µ–Ω—é ===
  useEffect(() => {
    document.body.style.overflow = isMenuOpen ? "hidden" : "auto";
    return () => {
      document.body.style.overflow = "auto";
    };
  }, [isMenuOpen]);

  // === üé® –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –¢–ï–ú–ò ===
  useEffect(() => {
    const savedTheme = localStorage.getItem("theme");
    const initialTheme =
      savedTheme === "light" || savedTheme === "dark" ? savedTheme : "dark";

    setTheme(initialTheme);
    document.body.classList.add(initialTheme);
  }, []);

  // === üåì –ü–ï–†–ï–ú–ò–ö–ê–ù–ù–Ø –¢–ï–ú–ò ===
  const toggleTheme = () => {
    const newTheme = theme === "light" ? "dark" : "light";
    setTheme(newTheme);
    document.body.classList.remove(theme);
    document.body.classList.add(newTheme);
    localStorage.setItem("theme", newTheme);
  };

  // === üß± –†–ï–ù–î–ï–† –ö–û–ú–ü–û–ù–ï–ù–¢–ê ===
  return (
    <header className={styles.header}>
      <div className={styles.container}>
        {/* === üîó –ì–û–õ–û–í–ù–ê –ù–ê–í–Ü–ì–ê–¶–Ü–Ø === */}
        <nav className={styles.navigation} aria-label="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é">
          <p className={styles.logo}>FrontEnd</p>
          <ul className={styles.header_ul}>
            <li className={styles.ul_navigation_li}>
              <a href="#about">{t("navAbout")}</a>
            </li>
            <li className={styles.ul_navigation_li}>
              <a href="#capabilities">{t("navCapabilities")}</a>
            </li>
            <li className={styles.ul_navigation_li}>
              <a href="#portfolio">{t("navPortfolio")}</a>
            </li>
            <li className={styles.ul_navigation_li}>
              <a href="#connect">{t("navConnect")}</a>
            </li>
          </ul>
        </nav>

        {/* === üåô –ü–ï–†–ï–ú–ò–ö–ê–ß–Ü –ú–û–í–ò –¢–ê –¢–ï–ú–ò === */}
        <div className={styles.language_switcher}>
          {/* –ö–Ω–æ–ø–∫–∏ –∑–º—ñ–Ω–∏ –º–æ–≤–∏ */}
          <button
            className={styles.language_switcher_button}
            onClick={() => setLang("ua")}
            disabled={lang === "ua"}
          >
            –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞
          </button>
          <button
            className={styles.language_switcher_button}
            onClick={() => setLang("en")}
            disabled={lang === "en"}
          >
            English
          </button>
          <button
            className={styles.language_switcher_button}
            onClick={() => setLang("cz")}
            disabled={lang === "cz"}
          >
            ƒåe≈°tina
          </button>

          {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Ç–µ–º–∏ */}
          <button
            id="theme-toggle"
            className={styles.theme_switcher}
            onClick={toggleTheme}
            aria-label="–ó–º—ñ–Ω–∏—Ç–∏ —Ç–µ–º—É"
            type="button"
          >
            {theme === "light" ? "üåô" : "‚òÄÔ∏è"}
          </button>
        </div>

        {/* === üçî –ë–£–†–ì–ï–†-–ú–ï–ù–Æ === */}
        <button
          className={styles.burger_menu}
          type="button"
          onClick={toggleMenu}
          aria-label="–í—ñ–¥–∫—Ä–∏—Ç–∏ –º–µ–Ω—é"
        >
          <svg className={styles.burger_menu_icon} width="44" height="44">
            <use href="./images/icons.svg#icon-Frame-3"></use>
          </svg>
        </button>

        {/* === üì± –ú–û–î–ê–õ–¨–ù–ï –ú–û–ë–Ü–õ–¨–ù–ï –ú–ï–ù–Æ === */}
        <MobileMenu isOpen={isMenuOpen} onClose={closeMenu} />
      </div>
    </header>
  );
};

export default Header;
